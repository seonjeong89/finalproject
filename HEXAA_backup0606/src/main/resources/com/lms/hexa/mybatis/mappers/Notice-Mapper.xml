<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Notice-Mapper">

  <resultMap type="notice" id="noticeMap">
    	<result property="noticeId" column="NOTICE_ID"/>
    	<result property="noticeTitle" column="NOTICE_TITLE"/>
    	<result property="noticeRegdate" column="NOTICE_REGDATE"/>
    	<result property="noticeContent" column="NOTICE_CONTENT"/>
    	<result property="mngId" column="MNG_ID"/>
    	<result property="mngName" column="MNG_NAME"/>
  </resultMap>


	<select id="selectSearchNoticeList" resultMap="noticeMap">	
		SELECT *
		FROM NOTICE A, MANAGER B
		WHERE A.NOTICE_ID IS NOT NULL
	      AND A.MNG_ID = B.MNG_ID
		<include refid="search" />
		ORDER BY NOTICE_ID DESC
	
		
<!-- 		select *
		from(
		    select rownum as rnum,SearchNoticeResult.*
		    from ( 
		    	select * 
				from notice
				where nno is not null
				<include refid="search" />				
				order by regDate desc
		    )  SearchNoticeResult
		    <![CDATA[
		    where rownum <= #{endRow}
		    ]]>
		)
		 <![CDATA[
		where rnum > #{startRow}		
		 ]]> -->
	</select>
	
	<sql id="search">
		<if test="searchType == 't'.toString()">
			and NOTICE_TITLE like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'c'.toString()">
			and NOTICE_CONTENT like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'tcw'.toString()">
			and (
			NOTICE_TITLE like '%'||#{keyword}||'%'
			or
			NOTICE_CONTENT like '%'||#{keyword}||'%'						
			)			
		</if>
	</sql>
	<select id="selectSearchNoticeListCount" resultType="int">
		select
		count(*) 
		from notice
		where NOTICE_ID is not null
		order by NOTICE_ID desc
		
	</select>

	<select id="selectNoticeByNno"  parameterType="notice" resultMap="noticeMap">
		select * 
		from notice 
		where notice_id=#{noticeId}
	</select>
	

	<update id="insertNotice" parameterType="notice">
		insert into 
		notice(NOTICE_ID,NOTICE_TITLE,NOTICE_REGDATE,NOTICE_CONTENT,MNG_ID)
		values(NOTICE_SEQ.nextval,#{noticeTitle},sysdate,#{noticeContent},#{mngId})
	</update>	

 		
	<update id="updateNotice" parameterType="notice">
		update notice 
		set NOTICE_TITLE=#{noticeTitle},
		    NOTICE_CONTENT=#{noticeContent},
		    NOTICE_REGDATE=	SYSDATE 	
	    where NOTICE_ID=#{noticeId}	
	</update>
	
	<update id="deleteNotice" parameterType="int" >
		delete 
		from notice 
	    where NOTICE_ID=#{noticeId}	
	</update>	
	

	<select id="selectNoticeSeqNext" resultType="int">
		select NOTICE_SEQ.nextval as NOTICE_ID from dual
	</select>

	
	<select id="noticeForMain" resultType="notice">
		

			select a.NOTICE_ID as noticeId,
			        a.NOTICE_TITLE as noticeTitle,
			        a.NOTICE_REGDATE as noticeRegdate,
			        a.NOTICE_CONTENT as noticeContent,
			        b.MNG_NAME as mngName
			from NOTICE A,
				 MANAGER B 
             where a.MNG_ID = b.MNG_ID
			order by NOTICE_ID desc
	</select>
	
	
	<select id="noticeDetail" parameterType="int" resultMap="noticeMap">
		

			select A.NOTICE_ID,
			        A.NOTICE_TITLE,
			        A.NOTICE_REGDATE,
			        A.NOTICE_CONTENT,
			        B.MNG_ID,
			        B.MNG_NAME
			from NOTICE A,
				 MANAGER B 
             where A.MNG_ID = B.MNG_ID
			 AND NOTICE_ID = #{noticeId}
	</select>
	
	<select id="selectSchoolURL" parameterType="str" resultType="school">
		  SELECT '%'||SUBSTR(SCHOOL_URL,0,20)||'%' AS schoolURL,
		  		  SCHOOL_NAME AS schoolName
		    FROM SCHOOL
		   WHERE SCHOOL_ID = (SELECT SCHOOL_NO
		                         FROM STUDENT
		                        WHERE STUDENT_ID = #{value})
	</select>
	
	
	
</mapper>
