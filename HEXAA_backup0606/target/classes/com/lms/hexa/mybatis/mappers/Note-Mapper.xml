<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="Note-Mapper">
  	
  	<resultMap type="note" id="noteMap">
  		<result property="noteId" column="NOTE_ID" />
  		<result property="noteContent" column="NOTE_CONTENT" />
  		<result property="noteReadDate" column="NOTE_READ_DATE" />
  		<result property="noteSendDate" column="NOTE_SEND_DATE" />
  		<result property="noteReadYN" column="NOTE_READ_YN" />
  		<result property="noteSendUserId" column="NOTE_SEND_USER_ID" />
  		<result property="noteReceivedUserId" column="NOTE_RECEIVED_USER_ID" />
  		<result property="noteTitle" column="NOTE_TITLE" />
  		<result property="noteDeleteKey" column="NOTE_DELETE_KEY" />
  		<result property="noteSendUserName" column="NOTE_SEND_USER_NAME" />
  	</resultMap>
  	
  	<resultMap type="user" id="userMap">
		<result property="id" column="user_id"/>
		<result property="pw" column="user_pw"/>
		<result property="category" column="user_category"/>
		<result property="isFirstLogin" column="user_is_first_login"/>
	</resultMap>
  	
  	<resultMap type="parent" id="parentMap">
  		<result property="parentId" column="PARENT_ID" />
  		<result property="parentPw" column="PARENT_PW" />
  		<result property="parentAlarmMethodCode" column="PARENT_ALARM_METHOD_CODE" />
  		<result property="parentName" column="PARENT_NAME" />
  		<result property="parentEmail" column="PARENT_EMAIL" />
  		<result property="parentAlarmYn" column="PARENT_ALARM_YN" />
  		<result property="parentHp" column="PARENT_HP" />
  	</resultMap>
  	
  	<resultMap type="student" id="studentMap">
		<result property="id" column="student_id"/>
		<result property="pw" column="student_pw"/>
		<result property="name" column="STUDENT_NAME"/>
	</resultMap>
  	
  	<resultMap type="manager" id="managerMap">
		<result property="id" column="mng_id"/>
		<result property="pw" column="mng_pw"/>
		<result property="mngName" column="MNG_NAME"/>
		<result property="mngGender" column="MNG_GENDER"/>
		<result property="mngEmail" column="MNG_EMAIL"/>
	</resultMap>
  	

	<select id="selectUserListByParent"  resultMap="userMap">
		select A.USER_ID
		      ,A.USER_CATEGORY
		      ,B.PARENT_NAME as user_is_first_login
		from "USER" A,PARENT B
		where user_category = 'p'
		  AND A.USER_ID = B.PARENT_ID
		  <if test="Search2 != null and !Search2.equals('')">
			AND B.PARENT_NAME LIKE '%'||#{Search2}||'%'
		</if>
		
	</select>
	
	<select id="selectUserListByStudent"  resultMap="userMap">
		select A.USER_ID
		      ,A.USER_CATEGORY
		      ,B.STUDENT_NAME as user_is_first_login
		from "USER" A, Student B
		where user_category = 's'
		  AND A.USER_ID = B.STUDENT_ID
		<if test="Search2 != null and !Search2.equals('')">
			AND B.STUDENT_NAME LIKE '%'||#{Search2}||'%'
		</if>
	</select>
	
	<select id="selectUserListByManager"  resultMap="userMap">
		select A.USER_ID
		      ,A.USER_CATEGORY
		      ,B.MNG_NAME as user_is_first_login
		from "USER" A, Manager B
		where user_category = 'm'
		  AND A.USER_ID = B.MNG_ID
		<if test="Search2 != null and !Search2.equals('')">
			AND B.MNG_NAME LIKE '%'||#{Search2}||'%'
		</if>
	</select>

	<select id="searchNoteListRe" parameterType="manager" resultMap="noteMap">
		SELECT A.NOTE_ID
		          ,A.NOTE_SEND_USER_ID
		          ,A.NOTE_TITLE
		          ,A.NOTE_SEND_DATE
		          ,A.NOTE_READ_YN
		          ,A.NOTE_READ_DATE
		          ,B.STUDENT_NAME AS NOTE_SEND_USER_NAME
		      FROM NOTE A, STUDENT B 
		     WHERE NOTE_RECEIVED_USER_ID = #{id}
		       AND NOTE_DELETE_KEY = 'N'
		       AND A.NOTE_SEND_USER_ID = B.STUDENT_ID
		        <if test="mngName!= null and !mngName.equals('')">
						AND B.STUDENT_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
		UNION     
		        SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.PARENT_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, PARENT B 
			     WHERE NOTE_RECEIVED_USER_ID = #{id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_SEND_USER_ID = B.PARENT_ID
			        <if test="mngName!= null and !mngName.equals('')">
						AND B.PARENT_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
		UNION
		        SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.MNG_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, MANAGER B 
			     WHERE NOTE_RECEIVED_USER_ID = #{id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_SEND_USER_ID = B.MNG_ID
			       <if test="mngName!= null and !mngName.equals('')">
						AND B.MNG_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
			     ORDER BY 4 DESC
	</select>



	<select id="searchNoteListSe" parameterType="manager" resultMap="noteMap">
		  SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.STUDENT_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, STUDENT B 
			     WHERE NOTE_SEND_USER_ID = #{id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_RECEIVED_USER_ID = B.STUDENT_ID
			        <if test="mngName != null and !mngName.equals('')">
						AND B.STUDENT_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
			UNION     
			        SELECT A.NOTE_ID
				          ,A.NOTE_SEND_USER_ID
				          ,A.NOTE_TITLE
				          ,A.NOTE_SEND_DATE
				          ,A.NOTE_READ_YN
				          ,A.NOTE_READ_DATE
				          ,B.PARENT_NAME AS NOTE_SEND_USER_NAME
				      FROM NOTE A, PARENT B 
				     WHERE NOTE_SEND_USER_ID =  #{id}
				       AND NOTE_DELETE_KEY = 'N'
				       AND A.NOTE_RECEIVED_USER_ID = B.PARENT_ID
				        <if test="mngName != null and !mngName.equals('')">
						AND B.PARENT_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
			UNION
			        SELECT A.NOTE_ID
				          ,A.NOTE_SEND_USER_ID
				          ,A.NOTE_TITLE
				          ,A.NOTE_SEND_DATE
				          ,A.NOTE_READ_YN
				          ,A.NOTE_READ_DATE
				          ,B.MNG_NAME AS NOTE_SEND_USER_NAME
				      FROM NOTE A, MANAGER B 
				     WHERE NOTE_SEND_USER_ID = #{id}
				       AND NOTE_DELETE_KEY = 'N'
				       AND A.NOTE_RECEIVED_USER_ID = B.MNG_ID
				        <if test="mngName != null and !mngName.equals('')">
						AND B.MNG_NAME LIKE '%'||#{mngName}||'%'
						 OR A.NOTE_TITLE LIKE '%'||#{mngName}||'%'
				   </if>
				     ORDER BY 4 DESC
		
	</select>




  	
  	<select id="selectNoteReceiveList" parameterType="str" resultMap="noteMap">
  		    SELECT A.NOTE_ID
		          ,A.NOTE_SEND_USER_ID
		          ,A.NOTE_TITLE
		          ,A.NOTE_SEND_DATE
		          ,A.NOTE_READ_YN
		          ,A.NOTE_READ_DATE
		          ,B.STUDENT_NAME AS NOTE_SEND_USER_NAME
		      FROM NOTE A, STUDENT B 
		     WHERE NOTE_RECEIVED_USER_ID = #{loginUser.id}
		       AND NOTE_DELETE_KEY = 'N'
		       AND A.NOTE_SEND_USER_ID = B.STUDENT_ID
		UNION     
		        SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.PARENT_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, PARENT B 
			     WHERE NOTE_RECEIVED_USER_ID =  #{loginUser.id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_SEND_USER_ID = B.PARENT_ID
		UNION
		        SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.MNG_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, MANAGER B 
			     WHERE NOTE_RECEIVED_USER_ID =  #{loginUser.id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_SEND_USER_ID = B.MNG_ID
			     ORDER BY 4 DESC
	</select>
  	
  	<select id="selectNoteSendList" parameterType="str" resultMap="noteMap">
  	 		    SELECT A.NOTE_ID
			          ,A.NOTE_SEND_USER_ID
			          ,A.NOTE_RECEIVED_USER_ID
			          ,A.NOTE_TITLE
			          ,A.NOTE_SEND_DATE
			          ,A.NOTE_READ_YN
			          ,A.NOTE_READ_DATE
			          ,B.STUDENT_NAME AS NOTE_SEND_USER_NAME
			      FROM NOTE A, STUDENT B 
			     WHERE NOTE_SEND_USER_ID = #{loginUser.id}
			       AND NOTE_DELETE_KEY = 'N'
			       AND A.NOTE_RECEIVED_USER_ID = B.STUDENT_ID
			UNION     
			        SELECT A.NOTE_ID
				          ,A.NOTE_SEND_USER_ID
				          ,A.NOTE_RECEIVED_USER_ID
				          ,A.NOTE_TITLE
				          ,A.NOTE_SEND_DATE
				          ,A.NOTE_READ_YN
				          ,A.NOTE_READ_DATE
				          ,B.PARENT_NAME AS NOTE_SEND_USER_NAME
				      FROM NOTE A, PARENT B 
				     WHERE NOTE_SEND_USER_ID =  #{loginUser.id}
				       AND NOTE_DELETE_KEY = 'N'
				       AND A.NOTE_RECEIVED_USER_ID = B.PARENT_ID
			UNION
			        SELECT A.NOTE_ID
				          ,A.NOTE_SEND_USER_ID
				          ,A.NOTE_RECEIVED_USER_ID
				          ,A.NOTE_TITLE
				          ,A.NOTE_SEND_DATE
				          ,A.NOTE_READ_YN
				          ,A.NOTE_READ_DATE
				          ,B.MNG_NAME AS NOTE_SEND_USER_NAME
				      FROM NOTE A, MANAGER B 
				     WHERE NOTE_SEND_USER_ID =  #{loginUser.id}
				       AND NOTE_DELETE_KEY = 'N'
				       AND A.NOTE_RECEIVED_USER_ID = B.MNG_ID
				     ORDER BY 4 DESC

  	</select>
  	
  	<select id="selectSearchNoteListCountReceive" resultType="int">
  		SELECT COUNT(*)
  		FROM NOTE
	WHERE NOTE_ID IS NOT NULL 
    	AND NOTE_RECEIVED_USER_ID = #{loginUser.id}
    		AND NOTE_DELETE_KEY = 'N'
  	</select>

	<select id="selectSearchNoteListCountSend" resultType="int">
  		SELECT COUNT(*)
  		FROM NOTE
			WHERE NOTE_ID IS NOT NULL 
    			AND NOTE_SEND_USER_ID = #{loginUser.id}
    				AND NOTE_DELETE_KEY = 'N'
  	</select>
  	
  	<select id="getUserCategory" parameterType="str" resultType="str">
  		SELECT USER_CATEGORY
  		  FROM "USER"
  		 WHERE USER_ID = #{noteSendUserId}
  	</select>
  	
  	<select id="getStudentName" parameterType="str" resultType="str">
  		SELECT STUDENT_NAME
			FROM STUDENT
				WHERE STUDENT_ID = #{noteSendUserId}
  	</select>
  	
  	<select id="getParentName" parameterType="str" resultType="str">
  		SELECT PARENT_NAME
			FROM PARENT
				WHERE PARENT_ID = #{noteSendUserId}
  	</select>
  	
  	<select id="getManagerName" parameterType="str" resultType="str">
  		SELECT MNG_NAME
			FROM MANAGER
				WHERE MNG_ID = #{noteSendUserId}
  	</select>
  	
  	<select id="selectNoteByNoteId" parameterType="str" resultMap="noteMap">
  		SELECT NOTE_ID,
  			   NOTE_SEND_DATE, 
  			   NOTE_SEND_USER_ID, 
  			   NOTE_RECEIVED_USER_ID,
  			   NOTE_TITLE, 
  			   NOTE_CONTENT
		FROM NOTE
		WHERE NOTE_ID = #{noteId}
  	</select>
  	
  	<select id="selectNoteSeqNext" resultType="int">
  		SELECT NOTE_SEQ.NEXTVAL AS NOTE_ID FROM DUAL		
  	</select>
  	
  	<update id="deleteNote" parameterType="str">
  		UPDATE NOTE
		  SET NOTE_DELETE_KEY = 'Y'
			WHERE NOTE_ID = #{noteId}
  	</update>
  	
  	<update id="updateNote" parameterType="str">
  		UPDATE NOTE
			SET NOTE_READ_DATE = SYSDATE,
			    NOTE_READ_YN = '읽음'
			WHERE NOTE_ID = #{noteId}
	</update>
	
	<insert id="insertNote" parameterType="java.util.Map">
		<foreach collection="userList" item="item" open="INSERT ALL" index="index" close="SELECT * FROM DUAL">
			INTO NOTE 
				(NOTE_ID, NOTE_CONTENT, NOTE_SEND_DATE, NOTE_SEND_USER_ID, NOTE_TITLE, NOTE_RECEIVED_USER_ID)
				VALUES(NOTE_SEQ.NEXTVAL||'a'||#{index}, #{item.content}, sysdate, #{item.loginUserId},#{item.title}, #{item.receiveUser})
		</foreach>
	</insert>
	
	<insert id="insertReply" parameterType="java.util.Map">
		<foreach collection="userList" item="item" open="INSERT ALL" index="index" close="SELECT * FROM DUAL">
			INTO NOTE 
				(NOTE_ID, NOTE_CONTENT, NOTE_SEND_DATE, NOTE_SEND_USER_ID, NOTE_TITLE, NOTE_RECEIVED_USER_ID)
				VALUES(NOTE_SEQ.NEXTVAL||'a'||#{index}, #{item.content}, sysdate, #{item.loginUserId},#{item.title}, #{item.receiveUser})
		</foreach>
	</insert>
	

  </mapper>