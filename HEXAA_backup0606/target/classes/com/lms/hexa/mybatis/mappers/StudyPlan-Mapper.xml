<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StudyPlan-Mapper">

  <resultMap type="studyPlan" id="studyPlanMap">
       <result property="splanId" column="SPLAN_ID"/>
       <result property="splanWeek" column="SPLAN_WEEK"/>
       <result property="splanTargettime" column="SPLAN_TARGETTIME"/>
       <result property="splanActualtime" column="SPLAN_ACTUALTIME"/>
       <result property="studentId" column="STUDENT_ID"/>
       <result property="mngSubject" column="MNG_SUBJECT"/>
       <result property="ssplanDetail" column="SSPLAN_DETAIL"/>
       <result property="ssplanAchievement" column="SSPLAN_ACHIEVEMENT"/>
       <result property="dsplanDay" column="DSPLAN_DAY"/>
       <result property="dsplanDetail" column="DSPLAN_DETAIL"/>
       <result property="dsplanAchievement" column="DSPLAN_ACHIEVEMENT"/>
       <result property="splanFeedback" column="SPLAN_FEEDBACK"/>
       <result property="studentName" column="STUDENT_NAME"/>
       <result property="mngId" column="MNG_ID"/>
       <result property="mngName" column="MNG_NAME"/>
       <result property="parentId" column="PARENT_ID"/>
  </resultMap>
  




	<select id="selectStudent" parameterType="str" resultMap="studyPlanMap">
			SELECT C.STUDENT_NAME
      			  ,B.STUDENT_ID
   			 FROM CLASS A, BELONG B, STUDENT C
			WHERE b.class_id = A.CLASS_ID
 			  AND B.STUDENT_ID = C.STUDENT_ID
  		      AND A.MNG_ID = #{mngId}
  		      </select>
  		      
  		      
  	<select id="selectPStudent" parameterType="str" resultMap="studyPlanMap">
			SELECT A.STUDENT_NAME
      			  ,A.STUDENT_ID
   			 FROM STUDENT A, PARENT B
			WHERE A.PARENT_ID = B.PARENT_ID
  		      AND A.PARENT_ID = #{parentId}
  		      </select>



<!--    <select id="selectSearchNoticeList" resultMap="noticeMap">   
      SELECT *
      FROM NOTICE
      WHERE NOTICE_ID IS NOT NULL
      ORDER BY NOTICE_ID DESC
      <include refid="search" />
   
   </select>
   

   <select id="selectSearchNoticeListCount" resultType="int">
      select
      count(*) 
      from notice
      where NOTICE_ID is not null
      order by NOTICE_ID desc
      
   </select>

   <select id="selectNoticeByNno"  parameterType="notice" resultMap="noticeMap">
      select * 
      from notice 
      where notice_id=#{noticeId}
   </select> -->
   
      <select id="studyPlan" parameterType="studyPlan" resultMap="studyPlanMap">
   SELECT SPLAN_ID,
          SPLAN_WEEK,
          SPLAN_TARGETTIME,
          SPLAN_ACTUALTIME,
          STUDENT_ID,
          SPLAN_FEEDBACK,
          MNG_ID,
          MNG_NAME
    FROM  STUDY_PLAN
    WHERE SPLAN_WEEK = #{splanWeek}
      AND STUDENT_ID = #{studentId}
      </select>
   


              
   
      <select id="subjectStudyPlanList" parameterType="studyPlan" resultMap="studyPlanMap">
     SELECT 
      B.SPLAN_ID,
      B.MNG_SUBJECT,
      B.SSPLAN_DETAIL,
      B.SSPLAN_ACHIEVEMENT,
      B.SSPLAN_ID
 FROM STUDY_PLAN A, SUBJECT_STUDY_PLAN B
    WHERE A.SPLAN_WEEK = #{splanWeek}
      AND A.STUDENT_ID = #{studentId}
      AND A.SPLAN_ID = B.SPLAN_ID
   </select>
   
   <select id="dateStudyPlanList" parameterType="studyPlan" resultMap="studyPlanMap">
   SELECT C.SPLAN_ID,
          C.DSPLAN_ACHIEVEMENT,
          C.DSPLAN_DAY,
          C.DSPLAN_DETAIL
    FROM  STUDY_PLAN A, DATE_STUDY_PLAN C 
    WHERE A.SPLAN_WEEK = #{splanWeek}
      AND A.STUDENT_ID = #{studentId}
      AND A.SPLAN_ID = C.SPLAN_ID
   </select>




   <!--  VO insert -->
<!--     <update id="insertStudyPlan" parameterType="java.util.Map">
       INSERT INTO 
       STUDY_PLAN(SPLAN_ID,SPLAN_WEEK,SPLAN_TARGETTIME,SPLAN_ACTUALTIME,STUDENT_ID)
       VALUES(#{sPlanid},#{studyPlan.week},#{studyPlan.target},#{studyPlan.actual},#{userId})
      </update>
 -->

    <update id="insertStudyPlan" parameterType="java.util.Map">
        MERGE INTO STUDY_PLAN
      USING dual 
        ON (SPLAN_WEEK = #{studyPlan.week} AND STUDENT_ID = #{userId})
        WHEN MATCHED THEN
           UPDATE SET SPLAN_TARGETTIME = #{studyPlan.target},
                       SPLAN_ACTUALTIME = #{studyPlan.actual},
                       SPLAN_FEEDBACK = #{studyPlan.feedback},
                       MNG_ID = #{studyPlan.mngId},
                       MNG_NAME = #{studyPlan.mngName}
         WHEN NOT MATCHED THEN 
         INSERT 
               (SPLAN_ID,SPLAN_WEEK,SPLAN_TARGETTIME,SPLAN_ACTUALTIME,STUDENT_ID,SPLAN_FEEDBACK,MNG_ID,MNG_NAME)
         VALUES(#{sPlanid},#{studyPlan.week},#{studyPlan.target},#{studyPlan.actual},#{userId},#{studyPlan.feedback},#{studyPlan.mngId},#{studyPlan.mngName})
      </update>


<!--     MAP insert -->
   <update id="insertSubjectStudyPlan" parameterType="java.util.Map">
   <foreach collection="subjectstudyPlan" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
         INTO SUBJECT_STUDY_PLAN(SPLAN_ID,SSPLAN_ID,MNG_SUBJECT,SSPLAN_DETAIL,SSPLAN_ACHIEVEMENT)
         VALUES (#{sPlanid},#{index},#{item.subject},#{item.SDetail},#{item.SAchieve})
   </foreach>
   </update>   
   
   
   <update id="updateSubjectStudyPlan" parameterType="java.util.Map">
      <foreach collection="subjectstudyPlan" item="item" index="index" separator=";"  open="DECLARE BEGIN" close="; END;">
          UPDATE SUBJECT_STUDY_PLAN 
            SET
                  MNG_SUBJECT = #{item.subject}
                 ,SSPLAN_DETAIL = #{item.SDetail}
                 ,SSPLAN_ACHIEVEMENT = #{item.SAchieve}
          
            WHERE SPLAN_ID = (SELECT SPLAN_ID
                            FROM STUDY_PLAN
                           WHERE SPLAN_WEEK = #{studyPlan.week}
                             AND STUDENT_ID = #{userId})
              AND SSPLAN_ID = #{index}
      </foreach>
   </update>   
   
   <update id="insertDateStudyPlan" parameterType="java.util.Map">
      <foreach collection="datestudyPlan" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
            INTO DATE_STUDY_PLAN(SPLAN_ID,DSPLAN_DAY,DSPLAN_DETAIL,DSPLAN_ACHIEVEMENT)
            VALUES (#{sPlanid},#{item.dayTd},#{item.DDetail},#{item.DAchieve})
      </foreach>
   </update>

   <update id="updateDateStudyPlan" parameterType="java.util.Map">
      <foreach collection="datestudyPlan" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
          UPDATE DATE_STUDY_PLAN 
            SET
                  DSPLAN_DETAIL = #{item.DDetail}
                 ,DSPLAN_ACHIEVEMENT = #{item.DAchieve}
          
            WHERE SPLAN_ID = (SELECT SPLAN_ID
                            FROM STUDY_PLAN
                           WHERE SPLAN_WEEK = #{studyPlan.week}
                             AND STUDENT_ID = #{userId})
               AND DSPLAN_DAY = #{item.dayTd}
      </foreach>
   </update>   
       
<!--    <update id="updateNotice" parameterType="notice">
      update notice 
      set NOTICE_TITLE=#{noticeTitle},
          NOTICE_CONTENT=#{noticeContent},
          NOTICE_REGDATE=   SYSDATE    
       where NOTICE_ID=#{noticeId}   
   </update>
   
   <update id="deleteNotice" parameterType="int" >
      delete 
      from notice 
       where NOTICE_ID=#{noticeId}   
   </update>   -->
   

   <select id="selectStudyPlanSeqNext" resultType="int">
      select STUDY_PLAN_SEQ.nextval as SPLAN_ID from dual
   </select>
   
   <select id="selectSPlanExist" parameterType="java.util.Map" resultType="int">
      SELECT SPLAN_ID
         FROM STUDY_PLAN
        WHERE SPLAN_WEEK = #{studyPlan.week}
          AND STUDENT_ID = #{userId}
   </select>
   
</mapper>